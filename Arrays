How Many Numbers Are Smaller Than the Current Number
Easy
4.7K
96
Companies
Given the array nums, for each nums[i] find out how many numbers in the array are smaller than it. That is, for each nums[i] you have to count the number of valid j's such that j != i and nums[j] < nums[i].

Return the answer in an array.

 

Example 1:

Input: nums = [8,1,2,2,3]
Output: [4,0,1,1,3]
Explanation: 
For nums[0]=8 there exist four smaller numbers than it (1, 2, 2 and 3). 
For nums[1]=1 does not exist any smaller number than it.
For nums[2]=2 there exist one smaller number than it (1). 
For nums[3]=2 there exist one smaller number than it (1). 
For nums[4]=3 there exist three smaller numbers than it (1, 2 and 2).




class Solution {
    public int[] smallerNumbersThanCurrent(int[] nums) {
        int[] res = new int[nums.length];
        int count = 0;
        for(int i=0; i<nums.length;i++){
            count = 0;
            for(int j=0; j<nums.length;j++){
                if(nums[i]>nums[j]){
                    count++;
                }
            }
            res[i]=count;
        }
        return res;
    }
    
    
    
    
    
    
    Shuffle the Array
Easy
4.9K
252
Companies
Given the array nums consisting of 2n elements in the form [x1,x2,...,xn,y1,y2,...,yn].

Return the array in the form [x1,y1,x2,y2,...,xn,yn].

 

Example 1:

Input: nums = [2,5,1,3,4,7], n = 3
Output: [2,3,5,4,1,7] 
Explanation: Since x1=2, x2=5, x3=1, y1=3, y2=4, y3=7 then the answer is [2,3,5,4,1,7].
Example 2:

Input: nums = [1,2,3,4,4,3,2,1], n = 4
Output: [1,4,2,3,3,2,4,1]




class Solution {
    public int[] shuffle(int[] nums, int n) {
     int[] res = new int[nums.length];
     for(int i=0;i<n;i++){
         res[2*i] = nums[i];
         res[2*i+1] = nums[n+i];
     }   
     return res;
    }
}
}
